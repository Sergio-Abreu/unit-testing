// Code generated by MockGen. DO NOT EDIT.
// Source: 6_communication/email_gateway.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	__styles "sergio/unit-testing/01_styles"
)

// MockIEmailGateway is a mock of IEmailGateway interface
type MockIEmailGateway struct {
	ctrl     *gomock.Controller
	recorder *MockIEmailGatewayMockRecorder
}

// MockIEmailGatewayMockRecorder is the mock recorder for MockIEmailGateway
type MockIEmailGatewayMockRecorder struct {
	mock *MockIEmailGateway
}

// NewMockIEmailGateway creates a new mock instance
func NewMockIEmailGateway(ctrl *gomock.Controller) *MockIEmailGateway {
	mock := &MockIEmailGateway{ctrl: ctrl}
	mock.recorder = &MockIEmailGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIEmailGateway) EXPECT() *MockIEmailGatewayMockRecorder {
	return m.recorder
}

// SendReceipt mocks base method
func (m *MockIEmailGateway) SendReceipt(email string, product __styles.Product, quantity __styles.Quantity) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SendReceipt", email, product, quantity)
}

// SendReceipt indicates an expected call of SendReceipt
func (mr *MockIEmailGatewayMockRecorder) SendReceipt(email, product, quantity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendReceipt", reflect.TypeOf((*MockIEmailGateway)(nil).SendReceipt), email, product, quantity)
}
